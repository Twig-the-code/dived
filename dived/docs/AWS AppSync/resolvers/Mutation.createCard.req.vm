## [Start] Static Group Authorization Checks **
## Authorization rule: { allow: groups, groups: "["admins"]" } **
#set( $userGroups = $util.defaultIfNull($ctx.identity.claims.get("cognito:groups"), []) )
#set( $allowedGroups = ["admins"] )
#set($isStaticGroupAuthorized = $util.defaultIfNull($isStaticGroupAuthorized, false))
#foreach( $userGroup in $userGroups )
  #foreach( $allowedGroup in $allowedGroups )
    #if( $allowedGroup == $userGroup )
      #set( $isStaticGroupAuthorized = true )
    #end
  #end
#end
## [End] Static Group Authorization Checks **


## No Dynamic Group Authorization Rules **


## No Owner Authorization Rules **


## [Start] Throw if unauthorized **
#if( !($isStaticGroupAuthorized == true || $isDynamicGroupAuthorized == true || $isOwnerAuthorized == true) )
  $util.unauthorized()
#end
## [End] Throw if unauthorized **



#set($id = $util.autoId())
#set($number = "")
{
    "version" : "2017-02-28",
    "operation" : "PutItem",
    "key" : {
        "pk": $util.dynamodb.toDynamoDBJson($id),
        "sk": $util.dynamodb.toDynamoDBJson("CARD"),
    },
    "attributeValues" : {
    	"pk": $util.dynamodb.toDynamoDBJson($id),
        "sk": $util.dynamodb.toDynamoDBJson("CARD"),
    	"data": $util.dynamodb.toDynamoDBJson($ctx.args.input.type),
        "json": $util.dynamodb.toDynamoDBJson({"number": $ctx.args.input.number}),
        "createdAt": $util.dynamodb.toDynamoDBJson($util.time.nowISO8601()),
    }
}