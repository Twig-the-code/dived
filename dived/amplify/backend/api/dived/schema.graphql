enum CardType {
    culture
    language
    multilanguage
    digi
}

type Card
@model
@auth(
    rules: [
        {allow: groups, groups: ["admins"], mutations: [create, update, delete], queries: null},
        {allow: groups, groups: ["admins","teams"], mutations: null, queries: [get, list]}
    ]) {
    id: ID!
    number: Int!
    type: CardType!
    description: String
}

input CardTypeFilterInput {
    eq: CardType
    ne: CardType
}

input FilterAllCardsInput {
    type: CardTypeFilterInput
    and: [FilterAllCardsInput]
    or: [FilterAllCardsInput]
    not: FilterAllCardsInput
}

type AllCardsResponse {
    items: [Card]
}

type Query {
    scanAllCards: AllCardsResponse
}


type Progress
@model
@auth(
    rules: [
        {allow: owner}
    ]
){
    id: ID!
    card: Card! @connection
}


type Location {
    lat: Float
    lon: Float
}

type School
@model
@auth(
    rules: [
        {allow: groups, groups: ["admins"]}
        {allow: groups, groups: ["teams"], mutations: null, queries: [get, list]}
    ]
)
@key(fields: ["id", "city", "name"])
@key(name: "ByCity", fields: ["city"], queryField: "schoolByCity")
{
    id: ID!
    name: String!
    city: String!
    location: Location
}
